plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id "org.sonarqube" version "4.3.1.3277"
	id 'jacoco'
}

group = 'events.paiya'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_17
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('mapstructVersion', "1.5.5.Final")
	set('lombokMapstructBindingVersion', "0.2.0")
	set('springCloudVersion', "2022.0.4")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation 'org.apache.commons:commons-lang3:3.13.0'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

sonar {
	properties {
		property "sonar.projectKey", "paiya-eventmanager-dev-sonar"
		property "sonar.projectName", "paiya-eventmanager-dev-sonar"
		property "sonar.organization", "paiya"
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.sources", "src/main/java/events/paiya/eventmanager/services"
		property "sonar.tests", "src/test/"
	}
}

jacocoTestReport {
	reports {
		xml.required = true
	}
}


